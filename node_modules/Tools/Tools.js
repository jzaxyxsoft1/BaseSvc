var _ = require('underscore');
var mongo= require('mongoskin');
var db = mongo.db('localhost:4000/ECTABase?auto_reconnect');
var AutoPart = mongo.db('localhost:4000/test?auto_reconnect').collection('AutoPart');
var AutoArticle = db.collection('AutoArticles');
var Project = db.collection('Project');
exports.Tools = {
    CreateValuePathArray: function (ct, seperator) {
        var r = [], _s = ct.split(seperator);
        while (_s.length > 0) {
            r.push(r.length > 0 ? r[r.length - 1] + seperator + _s.shift() : _s.shift());
        }
        return r;
    },
    GetCollectionNameFromBODefine: function (boID, seperator) {
        var bo = _.find(global.BOs, function (i) {
            return i._id == boID
        });
        if (bo) {
            var r = bo.ValuePath.split('/');
            return r[1];
        }
        return null;
    },
    GetCommodityValuePath: function (obj) {
        var did = obj.Define.Value;
        did = _.find(global.BOs, function (i) {
            return i._id == did;
        });
        return did ? did.ValuePath : '';
    }
};
exports.CommoditySvc = {
    getMaterails: function (t, query, option, cb) {
        switch (t) {
            case 'AutoPart':
                AutoPart.find(query, option).toArray(function (e, rs) {
                    _.each(rs, function (i) {
                        i.ValuePath = _.find(global.BOs,function (ii) {
                            return ii._id == i.Define.Value;
                        }).ValuePath;
                    });
                    cb(null, rs);
                });
                break;
            case 'AutoArticles':
                AutoArticle.find(query, option).toArray(function (e, rs) {
                    _.each(rs, function (i) {
                        i.ValuePath = _.find(global.BOs,function (ii) {
                            return ii._id == i.Define.Value;
                        }).ValuePath;
                    });
                    cb(null, rs);
                });
                break;
            case 'Project':
                Project.find(query, option).toArray(function (e, rs) {
                    _.each(rs, function (i) {
                        i.ValuePath = _.find(global.BOs,function (ii) {
                            return ii._id == i.Define.Value;
                        }).ValuePath;
                    });
                    cb(null, rs);
                });
                break;
        }
    }
};
